"""init

Revision ID: 5151d7bf665c
Revises: 
Create Date: 2025-06-17 10:43:52.946958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = '5151d7bf665c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('carts', 'status',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::text"))
    op.drop_constraint(op.f('orders_user_id_fkey'), 'carts', type_='foreignkey')
    op.create_foreign_key(None, 'carts', 'users', ['user_id'], ['user_id'])
    op.alter_column('categories', 'name',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('categories', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.create_index(op.f('ix_categories_category_id'), 'categories', ['category_id'], unique=False)
    op.alter_column('comments', 'comment_content',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('order_items', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'items_list',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.create_index(op.f('ix_order_items_order_item_id'), 'order_items', ['order_item_id'], unique=False)
    op.alter_column('payments', 'payment_method',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('payments', 'payment_status',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('payments', 'order_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_payments_payment_id'), 'payments', ['payment_id'], unique=False)
    op.alter_column('products', 'name',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('products', 'image',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('products', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('products', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('products', 'rating',
               existing_type=sa.NUMERIC(precision=3, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('products', 'detailed_description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('products', 'views',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('products_category_id_fkey'), 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['category_id'])
    op.alter_column('shipping', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.create_index(op.f('ix_shipping_shipping_id'), 'shipping', ['shipping_id'], unique=False)
    op.add_column('shop_name', sa.Column('response_rate', sa.Integer(), nullable=False))
    op.add_column('shop_name', sa.Column('email_owner', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('shop_name', sa.Column('phone_owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('shop_name', 'name',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('shop_name', 'created_at',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Date(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_shop_name_shop_name_id'), 'shop_name', ['shop_name_id'], unique=False)
    op.create_foreign_key(None, 'shop_name', 'users', ['email_owner'], ['email'])
    op.alter_column('user_follow_shop', 'followed_at',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_DATE'))
    op.drop_constraint(op.f('user_follow_shop_user_id_shop_name_id_key'), 'user_follow_shop', type_='unique')
    op.drop_constraint(op.f('user_follow_shop_shop_name_id_fkey'), 'user_follow_shop', type_='foreignkey')
    op.drop_constraint(op.f('user_follow_shop_user_id_fkey'), 'user_follow_shop', type_='foreignkey')
    op.create_foreign_key(None, 'user_follow_shop', 'shop_name', ['shop_name_id'], ['shop_name_id'])
    op.create_foreign_key(None, 'user_follow_shop', 'users', ['user_id'], ['user_id'])
    op.drop_column('user_follow_shop', 'id')
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('users', 'address',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
    op.alter_column('users', 'phone_number',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               nullable=False)
    op.alter_column('users', 'gender',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'birthday',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'reset_password_token',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'])
    op.alter_column('users', 'reset_password_token',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'birthday',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('users', 'gender',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'role',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'phone_number',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'address',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'password',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('user_follow_shop', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'user_follow_shop', type_='foreignkey')
    op.drop_constraint(None, 'user_follow_shop', type_='foreignkey')
    op.create_foreign_key(op.f('user_follow_shop_user_id_fkey'), 'user_follow_shop', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_follow_shop_shop_name_id_fkey'), 'user_follow_shop', 'shop_name', ['shop_name_id'], ['shop_name_id'], ondelete='CASCADE')
    op.create_unique_constraint(op.f('user_follow_shop_user_id_shop_name_id_key'), 'user_follow_shop', ['user_id', 'shop_name_id'])
    op.alter_column('user_follow_shop', 'followed_at',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_DATE'))
    op.drop_constraint(None, 'shop_name', type_='foreignkey')
    op.drop_index(op.f('ix_shop_name_shop_name_id'), table_name='shop_name')
    op.alter_column('shop_name', 'created_at',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('shop_name', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('shop_name', 'phone_owner')
    op.drop_column('shop_name', 'email_owner')
    op.drop_column('shop_name', 'response_rate')
    op.drop_index(op.f('ix_shipping_shipping_id'), table_name='shipping')
    op.alter_column('shipping', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key(op.f('products_category_id_fkey'), 'products', 'categories', ['category_id'], ['category_id'], ondelete='SET NULL')
    op.alter_column('products', 'views',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('products', 'detailed_description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('products', 'rating',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=3, scale=2),
               existing_nullable=True)
    op.alter_column('products', 'price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('products', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('products', 'image',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('products', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_payments_payment_id'), table_name='payments')
    op.alter_column('payments', 'order_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payments', 'payment_status',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('payments', 'payment_method',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_order_items_order_item_id'), table_name='order_items')
    op.alter_column('order_items', 'items_list',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('order_items', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('comments', 'comment_content',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_categories_category_id'), table_name='categories')
    op.alter_column('categories', 'updated_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('categories', 'created_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('categories', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('categories', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'carts', type_='foreignkey')
    op.create_foreign_key(op.f('orders_user_id_fkey'), 'carts', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.alter_column('carts', 'status',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::text"))
    # ### end Alembic commands ###
